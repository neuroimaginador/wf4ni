# R for travis: see documentation at https://docs.travis-ci.com/user/languages/r

# Neuroconductor Template for ANTsR Dep
language: r
cache: packages
warnings_are_errors: true
use_bioc: true
bioc_required: true
cran: http://cran.rstudio.com
dist: xenial

addons:
  apt:
    packages:
    - libfftw3-dev
    - libgsl-dev

os:
  - linux
  - osx
osx_image: xcode9


r:
- 3.3
- 3.4
- 3.5
- release
- devel

matrix:
  allow_failures:
    - r: devel

env:
  global:
  - R_BUILD_ARGS="--no-manual"
  - R_CHECK_ARGS="--as-cran --install-args=--build"
  - RGL_USE_NULL=TRUE
  - WARNINGS_ARE_ERRORS=1
  - PROJECT_NAME=neuroconductor
  - DISPLAY=:99.0
  - R_REMOTES_NO_ERRORS_FROM_WARNINGS=true

before_install:
  - ulimit -n 2048
  - export LD_LIBRARY_PATH=/usr/local/clang/lib:${LD_LIBRARY_PATH}
  - export PROJ_DIR=`basename $PWD`
  - echo "travis_wait*\.log$" >> .Rbuildignore
  - fname=travis_helpers.sh
  - wget -O ${fname} http://bit.ly/travis_helpers
  - cat ${fname}; source ${fname}; rm ${fname}
  - cat DESCRIPTION
  - start_xvfb ;
  - v8_install ;
  - dcmtk_install ;
  - export rver=`r_version`; echo $rver ;
  - export PACKAGE_NAME=`package_name`
  - export RCHECK_DIR=${PACKAGE_NAME}.Rcheck
  - remove_neuroc_packages
  - export ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS=1
  # does all the clang exports
  - x=`export_clang_cxx`; eval ${x}
  - if [ "$TRAVIS_OS_NAME" = "osx" ];
    then
      no_open_mp ;
    fi
  - echo "CC=${CC}, CXX=${CXX}, CXX1X=${CXX1X}"
  - echo "CXX1XSTD=${CXX1XSTD}, CXX11=${CXX11}"
  - clang_cxx
  - export cmake_version="3.11"
  - cmake --version
  - x=`cmake_setup`; echo "${x}"; eval ${x};
  - cmake --version
  - export ants_user=neuroconductor
  - wget -O antsr_travis.sh http://bit.ly/antsr_travis_sh
  - source ./antsr_travis.sh
  - rm antsr_travis.sh
  - fftw_install ;
  - gsl_install ;
  - cat DESCRIPTION
  - install_remotes_no_dep
  - cat DESCRIPTION
  - echo $PATH ;
  - install_deps_no_suggests
  - install_python_requirements ;
  - R CMD javareconf ;
  - travis_run_cache

script:
  # - source ~/.R/Makevars
  - x=`export_clang_cxx`; eval ${x}
  - travis_wait 100 R CMD build ${R_BUILD_ARGS} .
  - rm -f travis_wait*.log
  - PKG_TARBALL=$(ls -1t *.tar.gz | head -n 1)
  - ls
  - travis_wait 100 R CMD check ${R_CHECK_ARGS} "${PKG_TARBALL}"; CHECK_RET=$? ;
  - rm -f travis_wait*.log
  - if [[ $CHECK_RET -ne 0 ]];
    then
      echo "R CMD check failed";
      check_fail;
      dump_logs;
      travis_terminate 1;
    fi
  - check_warnings
  # - Rscript -e "message(devtools::check_failures(path = \"${RCHECK_DIR}\"))" ;
  # - grep -q -R "WARNING" "${RCHECK_DIR}/00check.log" ; if [[ $? -eq 0 ]]; error 1; fi
  # - if [[ ${#TRAVIS_TAG} -eq 0 ]];
  #   then
  #   travis_wait 100 R CMD check ${R_CHECK_ARGS} "${PKG_TARBALL}";
  #   fi
